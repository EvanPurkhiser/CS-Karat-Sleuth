#!/usr/bin/env ruby

# Handle passing in argv to either the learning part of the program or the
# checker part of the program. Comamand line arguments range from 0 to 3

require 'mail'

# Expected input for error messages
expectedArg = "Possible inputs:
  karatsleuth 
  karatsleuth <classified-dir>
  karatsleuth <unclassified-dir> {spam,ham}"

# Set data directory to project root by default
dataDir = File.expand_path("../training_sets/", Dir.pwd)

if ARGV.length > 2
	puts "Too many arguments. " + expectedArg
	exit
end

# If given the directory, look for separated ham/spam folders with emails
if ARGV.length >= 1
	dataDir = ARGV[0]
	hamDir = dataDir + "/ham"
	spamDir = dataDir + "/spam"
	unless File.directory? hamDir
		puts hamDir + ": No such directory. " + expectedArg
		exit
	end
	unless File.directory? spamDir
		puts spamDir + ": No such directory. " + expectedArg
		exit
	end
end

# If the directory has been classified as ham/spam
if ARGV.length == 2
	dataType = ARGV[1]
	if dataType != "spam" && dataType != "ham"
		puts "Invalid argument. " + expectedArg
		exit
	end
end

# Verify existence of training data
unless File.directory? dataDir
	puts dataDir + ": No such directory. " + expectedArg
	exit
end

# This should probably be in the library instead
# Read in each item within the directory
Dir.foreach(dataDir) do |item|
	next if item == '.' or item == '..'
	data = "#{dataDir}/#{item}"
	mail = Mail.read(data)
	# Use contents of mail to add into knowledge base
end
